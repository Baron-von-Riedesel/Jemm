
 1. About JemmDbg

 JemmDbg is a ring 0 debugger for Jemm386/JemmEx. It's actually a
 variant of Debug/X. It can be used to debug JLMs or examine the
 state of the V86-monitor.


 2. Usage
 
 JemmDbg is a JLM and calls JLoad to load itself in the v86-monitor
 address context. Once JemmDbg is loaded and initialized, it will
 become active when an exception in ring 0 is detected. There's a
 small tool supplied, Int3.exe, that emits a breakpoint instruction
 in ring 0 and so will activate the debugger.


 3. Features & Restrictions

 JemmDbg will ignore any exception caused in V86-mode, so it cannot
 be used to debug normal DOS software.

 The Jemm386/JemmEx address context consists mostly of "free" address
 space; tries to access memory at such addresses will cause page
 faults. They are reported, but shouldn't do any harm to system
 integrity.
 
 JLoad installs a subset of the Win9X ring 0 API, which uses interrupt
 20h in protected-mode as a kind of dynamic linking. JemmDbg is unaware
 of this API and handles Int 20h like any other software interrupt -
 that is, it might write a breakpoint instruction ( int 3 ) just behind
 the Int 20h. This should cause a GPF, since the Int 20h API expects two
 words as arguments just behind the Int 20h. So if an Int 20h is seen,
 one has to avoid the T(race) cmd and use G(o) instead.


 4. License

 JemmDbg is released under the MIT license. See license.txt for details.

 Andreas Grech
